{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\505DY\\\\Desktop\\\\cloud\\\\my-app\\\\src\\\\components\\\\function\\\\DropFileInput.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport '../../styles/DropFileInput.css';\nimport { ImageConfig } from \"../../configuration/ImageConfig\";\nimport uploadImage from '../../assets/cloud-upload.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DropFileInput = props => {\n  _s();\n\n  const [fileList, setFileList] = useState([]);\n\n  const onFileDrop = e => {\n    let formData = new FormData();\n    const newFile = e.target.files[0];\n\n    if (/\\.(jpe?g)$/i.test(newFile.name)) {\n      const reader = new FileReader();\n      reader.addEventListener(\"load\", function () {\n        const image = new Image();\n        image.src = String(this.result);\n        image.addEventListener('load', function () {\n          fileValidate(this.width, this.height, newFile);\n          handleUploadFile(newFile, formData);\n        });\n      }, false);\n      reader.readAsDataURL(newFile);\n    }\n  };\n\n  const handleUploadFile = (file, formData) => {\n    formData.append('imagepath', String(file.name));\n    formData.append('imagefile', file);\n    console.log(file);\n    fetch('http://localhost:8080/upload', {\n      'method': 'POST',\n      'body': formData\n    }).then(data => data.json()).then(json => {\n      console.log(20);\n      console.log(json);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const fileValidate = (width, height, newFile) => {\n    if (newFile.name.slice(-3).toLowerCase() === 'jpg' && newFile.size <= 50000 && width <= 200 && height <= 200) {\n      const updatedList = [...fileList, newFile];\n      setFileList(updatedList);\n      props.onFileChange(updatedList); // alert('Your file(s) uploaded successfully');\n    } else {\n      alert('NOT PASS!\\nPlease make sure that your file is following:\\n1.) .jpg form\\n2.) file size is not larger than 50KB\\n3.) file dimension is up to 200x200 pixel');\n    }\n  };\n\n  const fileRemove = f => {\n    const updatedList = [...fileList];\n    updatedList.splice(fileList.indexOf(f), 1);\n    setFileList(updatedList);\n    props.onFileChange(updatedList);\n  };\n\n  const wrapperRef = useRef(null);\n\n  const onDragEnter = () => {\n    wrapperRef.current.classList.add('dragover');\n  };\n\n  const onDragLeave = () => {\n    wrapperRef.current.classList.remove('dragover');\n  };\n\n  const onDrop = () => {\n    wrapperRef.current.classList.remove('dragover');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: wrapperRef,\n      className: \"drop-file-input\",\n      onDragEnter: onDragEnter,\n      onDragLeave: onDragLeave,\n      onDrop: onDrop,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-file-input__label\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: uploadImage,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & Drop your files here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          value: \"\",\n          onChange: onFileDrop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), fileList.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"drop-file-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"drop-file-preview__title\",\n        children: \"Ready to upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this), fileList.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"drop-file-preview__item\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: ImageConfig[item.type.split('/')[1]] || ImageConfig['default'],\n          width: \"pixels\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"drop-file-preview__item_info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [item.size, \"B\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"drop-file-preview__item_del\",\n          onClick: () => {\n            fileRemove(item);\n          },\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit-button\",\n          onClick: () => {\n            handleUploadFile(item);\n          },\n          children: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }, this) : null]\n  }, void 0, true);\n};\n\n_s(DropFileInput, \"5PXhLX3uEcSiX/oPTv4D1su51fo=\");\n\n_c = DropFileInput;\nDropFileInput.propTypes = {\n  onFileChange: PropTypes.func\n};\nexport default DropFileInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropFileInput\");","map":{"version":3,"names":["React","useRef","useState","PropTypes","ImageConfig","uploadImage","DropFileInput","props","fileList","setFileList","onFileDrop","e","formData","FormData","newFile","target","files","test","name","reader","FileReader","addEventListener","image","Image","src","String","result","fileValidate","width","height","handleUploadFile","readAsDataURL","file","append","console","log","fetch","then","data","json","catch","err","slice","toLowerCase","size","updatedList","onFileChange","alert","fileRemove","f","splice","indexOf","wrapperRef","onDragEnter","current","classList","add","onDragLeave","remove","onDrop","length","map","item","index","type","split","propTypes","func"],"sources":["C:/Users/505DY/Desktop/cloud/my-app/src/components/function/DropFileInput.jsx"],"sourcesContent":["import React,{useRef,useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport '../../styles/DropFileInput.css';\r\nimport { ImageConfig } from \"../../configuration/ImageConfig\";\r\nimport uploadImage from '../../assets/cloud-upload.png'\r\n\r\nconst DropFileInput = (props) => {\r\n\r\n    const [fileList, setFileList] = useState([]);\r\n    const onFileDrop = (e)=>{\r\n        let formData = new FormData();\r\n        const newFile = e.target.files[0];\r\n       \r\n        if (/\\.(jpe?g)$/i.test(newFile.name)) {\r\n            const reader = new FileReader();\r\n            reader.addEventListener(\"load\", function () {\r\n                const image = new Image();\r\n                image.src = String(this.result);\r\n                image.addEventListener('load', function () {\r\n                    fileValidate(this.width, this.height, newFile);\r\n                    handleUploadFile(newFile, formData);\r\n                });\r\n            }, false);\r\n                    \r\n            reader.readAsDataURL(newFile);\r\n        }\r\n \r\n    }\r\n\r\n    const handleUploadFile = (file,formData)=>{\r\n        formData.append('imagepath',String(file.name));\r\n        formData.append('imagefile',file)\r\n        console.log(file)\r\n        fetch('http://localhost:8080/upload', {\r\n                'method':'POST',\r\n                'body': formData\r\n            }).then((data)=>data.json()).then((json)=>{\r\n                console.log(20)\r\n                console.log(json)\r\n            }).catch((err)=>{\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const fileValidate = (width, height, newFile)=>{\r\n        if (newFile.name.slice(-3).toLowerCase() ==='jpg' && newFile.size <= 50000 && width<=200 && height<=200){\r\n            const updatedList = [...fileList, newFile];\r\n            setFileList(updatedList);\r\n            props.onFileChange(updatedList);\r\n            // alert('Your file(s) uploaded successfully');\r\n\r\n        }\r\n        else{\r\n            alert('NOT PASS!\\nPlease make sure that your file is following:\\n1.) .jpg form\\n2.) file size is not larger than 50KB\\n3.) file dimension is up to 200x200 pixel')\r\n        }\r\n    }\r\n\r\n    const fileRemove = (f)=>{\r\n        const updatedList = [...fileList]\r\n        updatedList.splice(fileList.indexOf(f), 1);\r\n        setFileList(updatedList);\r\n        props.onFileChange(updatedList);\r\n    }\r\n\r\n    \r\n\r\n    const wrapperRef = useRef(null)\r\n    const onDragEnter = ()=>{\r\n        wrapperRef.current.classList.add('dragover')\r\n    }\r\n    const onDragLeave = ()=>{\r\n        wrapperRef.current.classList.remove('dragover')\r\n    }\r\n    const onDrop = ()=>{\r\n        wrapperRef.current.classList.remove('dragover')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div ref={wrapperRef} className='drop-file-input' onDragEnter={onDragEnter} onDragLeave={onDragLeave} onDrop={onDrop}>\r\n                <div className='drop-file-input__label'>\r\n                    <img src={uploadImage} alt=\"\"/>\r\n                    <p>\r\n                        Drag & Drop your files here\r\n                    </p>\r\n                    <input type=\"file\" value=\"\" onChange={onFileDrop}/>\r\n                </div>\r\n            </div>\r\n        {\r\n            fileList.length > 0 ? (\r\n                <div className=\"drop-file-preview\">\r\n                    <p className=\"drop-file-preview__title\">\r\n                        Ready to upload\r\n                    </p>\r\n                    {\r\n                        fileList.map((item, index)=>(\r\n                        <div key={index} className=\"drop-file-preview__item\">\r\n                            <img src={ImageConfig[item.type.split('/')[1]] || ImageConfig['default']} width=\"pixels\" alt=\"\"/>\r\n                            <div className=\"drop-file-preview__item_info\">\r\n                                <p>{item.name}</p>\r\n                                <p>{item.size}B</p>\r\n                            </div>\r\n                            <span className=\"drop-file-preview__item_del\" onClick={()=>{\r\n                                fileRemove(item)\r\n                            }}>\r\n                                X\r\n                            </span>\r\n                            <button className='submit-button'  onClick={()=>{handleUploadFile(item)}} >submit</button>\r\n                        </div>\r\n                            \r\n                        ))\r\n                        \r\n                    }\r\n\r\n                </div>\r\n            ) : null \r\n        }\r\n        </>\r\n    );\r\n}\r\n\r\nDropFileInput.propTypes = {\r\n    onFileChange:PropTypes.func\r\n}\r\n\r\nexport default DropFileInput;"],"mappings":"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"},"metadata":{},"sourceType":"module"}